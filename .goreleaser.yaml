# .goreleaser.yaml
project_name: app

builds:
- id: app-linux-amd64
  binary: app
  main: ./src/app/
  flags:
    - -v
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
  # https://goreleaser.com/customization/templates/
  #ldflags:
  #  - -s
  #  - -w
  #  - -X main.version={{.Version}}
  goos:
    - linux
  goarch:
    - amd64
    # - arm64

archives:
  - id: app
    builds:
      - app-linux-amd64
    #name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    #wrap_in_directory: true
    #format: zip
    #files:
    #  - none*

#archives:
#  - format: binary

dockers:
- ids:
  - app-linux-amd64
  dockerfile: docker/Dockerfile
  goos: linux
  goarch: amd64
  image_templates:
    - "ghcr.io/{{ .Env.USER }}/app:{{ .Tag }}"
    - "ghcr.io/{{ .Env.USER }}/app:latest"
  build_flag_templates:
    - "--build-arg=VERSION={{.Tag}}"
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
  extra_files:
    - docker/my_init.sh
    - docker/service/

release:
  footer: |
    ## Docker images
    - `ghcr.io/{{ .Env.USER }}/app:{{ .Tag }}`
#  prerelease: auto
#  mode: replace
#  draft: false
